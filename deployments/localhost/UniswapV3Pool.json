{
  "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token0_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token1_",
          "type": "address"
        },
        {
          "internalType": "uint160",
          "name": "sqrtPriceX96",
          "type": "uint160"
        },
        {
          "internalType": "int24",
          "name": "tick",
          "type": "int24"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InsufficientInputAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidTickRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroLiquidity",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "int24",
          "name": "tickLower",
          "type": "int24"
        },
        {
          "indexed": true,
          "internalType": "int24",
          "name": "tickUpper",
          "type": "int24"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "amount0",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "amount1",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint160",
          "name": "sqrtPriceX96",
          "type": "uint160"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "liquidity",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "int24",
          "name": "tick",
          "type": "int24"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "liquidity",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "int24",
          "name": "lowerTick",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "upperTick",
          "type": "int24"
        },
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slot0",
      "outputs": [
        {
          "internalType": "uint160",
          "name": "sqrtPriceX96",
          "type": "uint160"
        },
        {
          "internalType": "int24",
          "name": "tick",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "int256",
          "name": "amount0",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "amount1",
          "type": "int256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "name": "ticks",
      "outputs": [
        {
          "internalType": "bool",
          "name": "initialized",
          "type": "bool"
        },
        {
          "internalType": "uint128",
          "name": "liquidity",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token0",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x455be7cf5e30e21f7e0c86a333bfcee4758e0dc91376ee487d977ece2f9dfc11",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
    "transactionIndex": 0,
    "gasUsed": "1195481",
    "logsBloom": "0x
    "blockHash": "0xb0efe2e512a2ff15dc815c45ee89e3856f052a5713ca07e01d0dd6d3426eedca",
    "transactionHash": "0x455be7cf5e30e21f7e0c86a333bfcee4758e0dc91376ee487d977ece2f9dfc11",
    "logs": [],
    "blockNumber": 5,
    "cumulativeGasUsed": "1195481",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    1,
    0
  ],
  "numDeployments": 1,
  "solcInputHash": "e0d8ceb34b3cee23e42dfb6972d99413",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1_\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientInputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTickRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroLiquidity\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"lowerTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"upperTick\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UniswapV3Pool.sol\":\"UniswapV3Pool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"contracts/UniswapV3Pool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"./lib/Position.sol\\\";\\nimport \\\"./lib/Tick.sol\\\";\\n\\nimport \\\"./interfaces/IUniswapV3MintCallback.sol\\\";\\nimport \\\"./interfaces/IUniswapV3SwapCallback.sol\\\";\\n\\n\\ncontract UniswapV3Pool {\\n\\n    error InvalidTickRange();\\n    error ZeroLiquidity();\\n    error InsufficientInputAmount();\\n\\n    event Mint(address sender, address indexed owner, int24 indexed tickLower, int24 indexed tickUpper, uint128 amount, uint256 amount0, uint256 amount1);\\n    event Swap(address indexed sender, address indexed recipient, int256 amount0, int256 amount1, uint160 sqrtPriceX96, uint128 liquidity, int24 tick);\\n\\n    using Tick for mapping(int24 => Tick.Info);\\n    using Position for mapping(bytes32 => Position.Info);\\n    using Position for Position.Info;\\n\\n    int24 internal constant MIN_TICK = -887272;\\n    int24 internal constant MAX_TICK = -MIN_TICK;\\n\\n    address public immutable token0;\\n    address public immutable token1;\\n\\n    struct CallbackData {\\n        address token0;\\n        address token1;\\n        address payer;\\n    }\\n\\n    struct Slot0 {\\n        // \\u5f53\\u524d\\u4ef7\\u683c\\n        uint160 sqrtPriceX96;\\n        // \\u5f53\\u524d tick\\n        int24 tick;\\n    }\\n    Slot0 public slot0;\\n\\n    // \\u603b\\u7684\\u6d41\\u52a8\\u6027\\n    uint128 public liquidity;\\n\\n    mapping(int24 => Tick.Info) public ticks;\\n    mapping(bytes32 => Position.Info) positions;\\n\\n    constructor(\\n        address token0_,\\n        address token1_,\\n        uint160 sqrtPriceX96,\\n        int24 tick\\n    ) {\\n        token0 = token0_;\\n        token1 = token1_;\\n\\n        slot0 = Slot0({sqrtPriceX96: sqrtPriceX96, tick: tick});\\n    }\\n\\n    // \\u63d0\\u4f9b\\u6d41\\u52a8\\u6027\\n    function mint(\\n        address owner,\\n        int24 lowerTick,\\n        int24 upperTick,\\n        uint128 amount,\\n        bytes calldata data\\n    ) external returns (uint256 amount0, uint256 amount1) {\\n        if (lowerTick >= upperTick || lowerTick < MIN_TICK || upperTick > MAX_TICK) {\\n            revert InvalidTickRange();\\n        }\\n        if (amount <= 0) {\\n            revert ZeroLiquidity();\\n        }\\n\\n        // \\u66f4\\u65b0\\u4e0a\\u4e0b\\u8fb9\\u754c\\u7684 liquidity\\n        ticks.update(lowerTick, amount);\\n        ticks.update(upperTick, amount);\\n\\n        Position.Info storage position = positions.get(owner, lowerTick, upperTick);\\n        position.update(amount);\\n\\n        // TODO \\u6839\\u636e amount \\u548c sqrtPriceX96 \\u8ba1\\u7b97 amount0 \\u548c amount1\\n        amount0 = 0.998976618347425280 ether;\\n        amount1 = 5000 ether;\\n\\n        liquidity += uint128(amount);\\n\\n        // \\u8c03\\u7528\\u56de\\u8c03\\u51fd\\u6570\\u8f6c\\u8d26\\uff0c\\u8f6c\\u8d26\\u91d1\\u989d\\u4e3a amount0 \\u548c amount1\\n        uint256 balance0Before;\\n        uint256 balance1Before;\\n        if (amount0 > 0) {\\n            balance0Before = balance0();\\n        }\\n        if (amount1 > 0) {\\n            balance1Before = balance1();\\n        }\\n        IUniswapV3MintCallback(msg.sender).uniswapV3MintCallback(amount0, amount1, data);\\n        if (amount0 > 0 && balance0Before + amount0 > balance0()) {\\n            revert InsufficientInputAmount();\\n        }\\n        if (amount1 > 0 && balance1Before + amount1 > balance1()) {\\n            revert InsufficientInputAmount();\\n        }\\n        emit Mint(msg.sender, owner, lowerTick, upperTick, amount, amount0, amount1);\\n    }\\n\\n    function swap(address recipient, bytes calldata data) public returns (int256 amount0, int256 amount1) {\\n\\n        // TODO \\u9700\\u8981\\u628a\\u8fd9\\u4e9b\\u786c\\u7f16\\u7801\\u7684\\u66ff\\u6362\\u4e3a\\u8ba1\\u7b97\\n        int24 nextTick = 85184;\\n        uint160 nextPrice = 5604469350942327889444743441197;\\n        amount0 = -0.008396714242162444 ether;\\n        amount1 = 42 ether;\\n\\n        (slot0.tick, slot0.sqrtPriceX96) = (nextTick, nextPrice);\\n\\n        IERC20(token0).transfer(recipient, uint256(-amount0));\\n        uint256 balance1Before = balance1();\\n        IUniswapV3SwapCallback(msg.sender).uniswapV3SwapCallback(amount0, amount1, data);\\n        if (balance1Before + uint256(amount1) > balance1()) {\\n            revert InsufficientInputAmount();\\n        }\\n\\n        emit Swap(msg.sender, recipient, amount0, amount1, slot0.sqrtPriceX96, liquidity, slot0.tick);\\n    }\\n\\n    function balance0() internal view returns (uint256) {\\n        return IERC20(token0).balanceOf(address(this));\\n    }\\n\\n    function balance1() internal view returns (uint256) {\\n        return IERC20(token1).balanceOf(address(this));\\n    }\\n}\",\"keccak256\":\"0x62fc1c13f9229ba5564a5ebd42052bb3fca1e9ddb8255fd123ed2ff0c22b3ec8\",\"license\":\"MIT\"},\"contracts/interfaces/IUniswapV3MintCallback.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\ninterface IUniswapV3MintCallback {\\n    function uniswapV3MintCallback(uint256 amount0, uint256 amount1, bytes calldata data) external;\\n}\",\"keccak256\":\"0x4087b0a14d2737727495263a43d9e2398e1e96287e566715e6442612c6184f0e\",\"license\":\"MIT\"},\"contracts/interfaces/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\ninterface IUniswapV3SwapCallback {\\n    function uniswapV3SwapCallback(int256 amount0, int256 amount1, bytes calldata data) external;\\n}\",\"keccak256\":\"0xc3c54870bbceb41a1de853ae4ed1a073d1e9bf8346e9d563a0f7a6abe1ce3a4e\",\"license\":\"MIT\"},\"contracts/lib/Position.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nlibrary Position {\\n    struct Info {\\n        uint128 liquidity;\\n    }\\n\\n    function get(\\n        mapping(bytes32 => Position.Info) storage self,\\n        address owner,\\n        int24 lowerTick,\\n        int24 upperTick\\n    ) internal view returns (Position.Info storage position) {\\n        position = self[\\n            keccak256(abi.encodePacked(owner, lowerTick, upperTick))\\n        ];\\n    }\\n\\n    function update(Info storage self, uint128 liquidityDelta) internal {\\n        uint128 liquidityBefore = self.liquidity;\\n        uint128 liquidityAfter = liquidityBefore + liquidityDelta;\\n        self.liquidity = liquidityAfter;\\n    }\\n}\",\"keccak256\":\"0xd0f3469dabe9d8ef81663eed32c35f42d16dd0dec86ac9a8ae1c5a092886baa3\",\"license\":\"MIT\"},\"contracts/lib/Tick.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nlibrary Tick {\\n    struct Info {\\n        bool initialized;\\n        uint128 liquidity;\\n    }\\n\\n    function update(\\n        mapping(int24 => Tick.Info) storage self,\\n        int24 tick,\\n        uint128 liquidityDelta\\n    ) internal {\\n        Tick.Info storage tickInfo = self[tick];\\n        uint128 liquidityBefore = tickInfo.liquidity;\\n        uint128 liquidityAfter = liquidityBefore + liquidityDelta;\\n        if (liquidityBefore == 0) {\\n            tickInfo.initialized = true;\\n        }\\n        tickInfo.liquidity = liquidityAfter;\\n    }\\n}\",\"keccak256\":\"0x5ec3964ba7bc97b5811cf847651a27cf1f33ecc4d39b346eb1c981080b3dbc7e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b50604051620016ed380380620016ed833981810160405281019062000037919062000223565b8373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505060405180604001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018260020b8152506000808201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548162ffffff021916908360020b62ffffff1602179055509050505050505062000295565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200017c826200014f565b9050919050565b6200018e816200016f565b81146200019a57600080fd5b50565b600081519050620001ae8162000183565b92915050565b620001bf816200014f565b8114620001cb57600080fd5b50565b600081519050620001df81620001b4565b92915050565b60008160020b9050919050565b620001fd81620001e5565b81146200020957600080fd5b50565b6000815190506200021d81620001f2565b92915050565b6000806000806080858703121562000240576200023f6200014a565b5b600062000250878288016200019d565b945050602062000263878288016200019d565b93505060406200027687828801620001ce565b925050606062000289878288016200020c565b91505092959194509250565b60805160a05161141d620002d06000396000818161059a0152610b2f015260008181610190015281816106790152610a8e015261141d6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80633c8a7d8d1161005b5780633c8a7d8d146100dd578063d21220a71461010e578063e35473351461012c578063f30dba931461015d5761007d565b80630dfe1681146100825780631a686502146100a05780633850c7bd146100be575b600080fd5b61008a61018e565b6040516100979190610c0d565b60405180910390f35b6100a86101b2565b6040516100b59190610c53565b60405180910390f35b6100c66101d4565b6040516100d4929190610c99565b60405180910390f35b6100f760048036038101906100f29190610db5565b610213565b604051610105929190610e68565b60405180910390f35b610116610598565b6040516101239190610c0d565b60405180910390f35b61014660048036038101906101419190610e91565b6105bc565b604051610154929190610f0a565b60405180910390f35b61017760048036038101906101729190610f33565b6108b3565b604051610185929190610f7b565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b600160009054906101000a90046fffffffffffffffffffffffffffffffff1681565b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460020b905082565b6000808560020b8760020b12158061025057507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860020b8760020b125b8061028957507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761861028090610fd3565b60020b8660020b135b156102c0576040517f064847d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000856fffffffffffffffffffffffffffffffff161161030c576040517f1007454800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610322878660026109009092919063ffffffff16565b610338868660026109009092919063ffffffff16565b600061035289898960036109cc909392919063ffffffff16565b90506103678682610a1490919063ffffffff16565b670ddd13f10b84ee00925069010f0cf064dd59200000915085600160008282829054906101000a90046fffffffffffffffffffffffffffffffff166103ac919061101b565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060008060008511156103f9576103f6610a8a565b91505b600084111561040d5761040a610b2b565b90505b3373ffffffffffffffffffffffffffffffffffffffff1663d348799786868a8a6040518563ffffffff1660e01b815260040161044c94939291906110bd565b600060405180830381600087803b15801561046657600080fd5b505af115801561047a573d6000803e3d6000fd5b5050505060008511801561049f5750610491610a8a565b858361049d91906110fd565b115b156104d6576040517f098fb56100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000841180156104f757506104e9610b2b565b84826104f591906110fd565b115b1561052e576040517f098fb56100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8860020b8a60020b8c73ffffffffffffffffffffffffffffffffffffffff167f7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde338c8a8a6040516105829493929190611131565b60405180910390a4505050965096945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080600062014cc0905060006c46bd046408013d67ed5d406b2d90507fffffffffffffffffffffffffffffffffffffffffffffffffffe22b3b9e50c0f49350680246ddf97976680000925081816000800160146000800160008491906101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508391906101000a81548162ffffff021916908360020b62ffffff16021790555050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb88866106be90611176565b6040518363ffffffff1660e01b81526004016106db9291906111be565b6020604051808303816000875af11580156106fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071e9190611213565b506000610729610b2b565b90503373ffffffffffffffffffffffffffffffffffffffff1663fa461e3386868a8a6040518563ffffffff1660e01b815260040161076a9493929190611240565b600060405180830381600087803b15801561078457600080fd5b505af1158015610798573d6000803e3d6000fd5b505050506107a4610b2b565b84826107b091906110fd565b11156107e8576040517f098fb56100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca6787876000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a90046fffffffffffffffffffffffffffffffff166000800160149054906101000a900460020b6040516108a0959493929190611280565b60405180910390a3505050935093915050565b60026020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a90046fffffffffffffffffffffffffffffffff16905082565b60008360008460020b60020b8152602001908152602001600020905060008160000160019054906101000a90046fffffffffffffffffffffffffffffffff1690506000838261094f919061101b565b90506000826fffffffffffffffffffffffffffffffff16036109895760018360000160006101000a81548160ff0219169083151502179055505b808360000160016101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550505050505050565b60008460008585856040516020016109e693929190611351565b6040516020818303038152906040528051906020012081526020019081526020016000209050949350505050565b60008260000160009054906101000a90046fffffffffffffffffffffffffffffffff16905060008282610a47919061101b565b9050808460000160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610ae59190610c0d565b602060405180830381865afa158015610b02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2691906113ba565b905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b869190610c0d565b602060405180830381865afa158015610ba3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc791906113ba565b905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bf782610bcc565b9050919050565b610c0781610bec565b82525050565b6000602082019050610c226000830184610bfe565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b610c4d81610c28565b82525050565b6000602082019050610c686000830184610c44565b92915050565b610c7781610bcc565b82525050565b60008160020b9050919050565b610c9381610c7d565b82525050565b6000604082019050610cae6000830185610c6e565b610cbb6020830184610c8a565b9392505050565b600080fd5b600080fd5b610cd581610bec565b8114610ce057600080fd5b50565b600081359050610cf281610ccc565b92915050565b610d0181610c7d565b8114610d0c57600080fd5b50565b600081359050610d1e81610cf8565b92915050565b610d2d81610c28565b8114610d3857600080fd5b50565b600081359050610d4a81610d24565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610d7557610d74610d50565b5b8235905067ffffffffffffffff811115610d9257610d91610d55565b5b602083019150836001820283011115610dae57610dad610d5a565b5b9250929050565b60008060008060008060a08789031215610dd257610dd1610cc2565b5b6000610de089828a01610ce3565b9650506020610df189828a01610d0f565b9550506040610e0289828a01610d0f565b9450506060610e1389828a01610d3b565b935050608087013567ffffffffffffffff811115610e3457610e33610cc7565b5b610e4089828a01610d5f565b92509250509295509295509295565b6000819050919050565b610e6281610e4f565b82525050565b6000604082019050610e7d6000830185610e59565b610e8a6020830184610e59565b9392505050565b600080600060408486031215610eaa57610ea9610cc2565b5b6000610eb886828701610ce3565b935050602084013567ffffffffffffffff811115610ed957610ed8610cc7565b5b610ee586828701610d5f565b92509250509250925092565b6000819050919050565b610f0481610ef1565b82525050565b6000604082019050610f1f6000830185610efb565b610f2c6020830184610efb565b9392505050565b600060208284031215610f4957610f48610cc2565b5b6000610f5784828501610d0f565b91505092915050565b60008115159050919050565b610f7581610f60565b82525050565b6000604082019050610f906000830185610f6c565b610f9d6020830184610c44565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fde82610c7d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000082036110105761100f610fa4565b5b816000039050919050565b600061102682610c28565b915061103183610c28565b925082820190506fffffffffffffffffffffffffffffffff81111561105957611058610fa4565b5b92915050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b600061109c838561105f565b93506110a9838584611070565b6110b28361107f565b840190509392505050565b60006060820190506110d26000830187610e59565b6110df6020830186610e59565b81810360408301526110f2818486611090565b905095945050505050565b600061110882610e4f565b915061111383610e4f565b925082820190508082111561112b5761112a610fa4565b5b92915050565b60006080820190506111466000830187610bfe565b6111536020830186610c44565b6111606040830185610e59565b61116d6060830184610e59565b95945050505050565b600061118182610ef1565b91507f800000000000000000000000000000000000000000000000000000000000000082036111b3576111b2610fa4565b5b816000039050919050565b60006040820190506111d36000830185610bfe565b6111e06020830184610e59565b9392505050565b6111f081610f60565b81146111fb57600080fd5b50565b60008151905061120d816111e7565b92915050565b60006020828403121561122957611228610cc2565b5b6000611237848285016111fe565b91505092915050565b60006060820190506112556000830187610efb565b6112626020830186610efb565b8181036040830152611275818486611090565b905095945050505050565b600060a0820190506112956000830188610efb565b6112a26020830187610efb565b6112af6040830186610c6e565b6112bc6060830185610c44565b6112c96080830184610c8a565b9695505050505050565b60008160601b9050919050565b60006112eb826112d3565b9050919050565b60006112fd826112e0565b9050919050565b61131561131082610bec565b6112f2565b82525050565b60008160e81b9050919050565b60006113338261131b565b9050919050565b61134b61134682610c7d565b611328565b82525050565b600061135d8286611304565b60148201915061136d828561133a565b60038201915061137d828461133a565b600382019150819050949350505050565b61139781610e4f565b81146113a257600080fd5b50565b6000815190506113b48161138e565b92915050565b6000602082840312156113d0576113cf610cc2565b5b60006113de848285016113a5565b9150509291505056fea2646970667358221220f4e2590f2537681752ea321e68225170cf4b1cf45808482dcc27190db86ae8bc64736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80633c8a7d8d1161005b5780633c8a7d8d146100dd578063d21220a71461010e578063e35473351461012c578063f30dba931461015d5761007d565b80630dfe1681146100825780631a686502146100a05780633850c7bd146100be575b600080fd5b61008a61018e565b6040516100979190610c0d565b60405180910390f35b6100a86101b2565b6040516100b59190610c53565b60405180910390f35b6100c66101d4565b6040516100d4929190610c99565b60405180910390f35b6100f760048036038101906100f29190610db5565b610213565b604051610105929190610e68565b60405180910390f35b610116610598565b6040516101239190610c0d565b60405180910390f35b61014660048036038101906101419190610e91565b6105bc565b604051610154929190610f0a565b60405180910390f35b61017760048036038101906101729190610f33565b6108b3565b604051610185929190610f7b565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b600160009054906101000a90046fffffffffffffffffffffffffffffffff1681565b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460020b905082565b6000808560020b8760020b12158061025057507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860020b8760020b125b8061028957507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761861028090610fd3565b60020b8660020b135b156102c0576040517f064847d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000856fffffffffffffffffffffffffffffffff161161030c576040517f1007454800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610322878660026109009092919063ffffffff16565b610338868660026109009092919063ffffffff16565b600061035289898960036109cc909392919063ffffffff16565b90506103678682610a1490919063ffffffff16565b670ddd13f10b84ee00925069010f0cf064dd59200000915085600160008282829054906101000a90046fffffffffffffffffffffffffffffffff166103ac919061101b565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060008060008511156103f9576103f6610a8a565b91505b600084111561040d5761040a610b2b565b90505b3373ffffffffffffffffffffffffffffffffffffffff1663d348799786868a8a6040518563ffffffff1660e01b815260040161044c94939291906110bd565b600060405180830381600087803b15801561046657600080fd5b505af115801561047a573d6000803e3d6000fd5b5050505060008511801561049f5750610491610a8a565b858361049d91906110fd565b115b156104d6576040517f098fb56100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000841180156104f757506104e9610b2b565b84826104f591906110fd565b115b1561052e576040517f098fb56100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8860020b8a60020b8c73ffffffffffffffffffffffffffffffffffffffff167f7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde338c8a8a6040516105829493929190611131565b60405180910390a4505050965096945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080600062014cc0905060006c46bd046408013d67ed5d406b2d90507fffffffffffffffffffffffffffffffffffffffffffffffffffe22b3b9e50c0f49350680246ddf97976680000925081816000800160146000800160008491906101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508391906101000a81548162ffffff021916908360020b62ffffff16021790555050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb88866106be90611176565b6040518363ffffffff1660e01b81526004016106db9291906111be565b6020604051808303816000875af11580156106fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071e9190611213565b506000610729610b2b565b90503373ffffffffffffffffffffffffffffffffffffffff1663fa461e3386868a8a6040518563ffffffff1660e01b815260040161076a9493929190611240565b600060405180830381600087803b15801561078457600080fd5b505af1158015610798573d6000803e3d6000fd5b505050506107a4610b2b565b84826107b091906110fd565b11156107e8576040517f098fb56100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca6787876000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a90046fffffffffffffffffffffffffffffffff166000800160149054906101000a900460020b6040516108a0959493929190611280565b60405180910390a3505050935093915050565b60026020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a90046fffffffffffffffffffffffffffffffff16905082565b60008360008460020b60020b8152602001908152602001600020905060008160000160019054906101000a90046fffffffffffffffffffffffffffffffff1690506000838261094f919061101b565b90506000826fffffffffffffffffffffffffffffffff16036109895760018360000160006101000a81548160ff0219169083151502179055505b808360000160016101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550505050505050565b60008460008585856040516020016109e693929190611351565b6040516020818303038152906040528051906020012081526020019081526020016000209050949350505050565b60008260000160009054906101000a90046fffffffffffffffffffffffffffffffff16905060008282610a47919061101b565b9050808460000160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610ae59190610c0d565b602060405180830381865afa158015610b02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2691906113ba565b905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b869190610c0d565b602060405180830381865afa158015610ba3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc791906113ba565b905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bf782610bcc565b9050919050565b610c0781610bec565b82525050565b6000602082019050610c226000830184610bfe565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b610c4d81610c28565b82525050565b6000602082019050610c686000830184610c44565b92915050565b610c7781610bcc565b82525050565b60008160020b9050919050565b610c9381610c7d565b82525050565b6000604082019050610cae6000830185610c6e565b610cbb6020830184610c8a565b9392505050565b600080fd5b600080fd5b610cd581610bec565b8114610ce057600080fd5b50565b600081359050610cf281610ccc565b92915050565b610d0181610c7d565b8114610d0c57600080fd5b50565b600081359050610d1e81610cf8565b92915050565b610d2d81610c28565b8114610d3857600080fd5b50565b600081359050610d4a81610d24565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610d7557610d74610d50565b5b8235905067ffffffffffffffff811115610d9257610d91610d55565b5b602083019150836001820283011115610dae57610dad610d5a565b5b9250929050565b60008060008060008060a08789031215610dd257610dd1610cc2565b5b6000610de089828a01610ce3565b9650506020610df189828a01610d0f565b9550506040610e0289828a01610d0f565b9450506060610e1389828a01610d3b565b935050608087013567ffffffffffffffff811115610e3457610e33610cc7565b5b610e4089828a01610d5f565b92509250509295509295509295565b6000819050919050565b610e6281610e4f565b82525050565b6000604082019050610e7d6000830185610e59565b610e8a6020830184610e59565b9392505050565b600080600060408486031215610eaa57610ea9610cc2565b5b6000610eb886828701610ce3565b935050602084013567ffffffffffffffff811115610ed957610ed8610cc7565b5b610ee586828701610d5f565b92509250509250925092565b6000819050919050565b610f0481610ef1565b82525050565b6000604082019050610f1f6000830185610efb565b610f2c6020830184610efb565b9392505050565b600060208284031215610f4957610f48610cc2565b5b6000610f5784828501610d0f565b91505092915050565b60008115159050919050565b610f7581610f60565b82525050565b6000604082019050610f906000830185610f6c565b610f9d6020830184610c44565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fde82610c7d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000082036110105761100f610fa4565b5b816000039050919050565b600061102682610c28565b915061103183610c28565b925082820190506fffffffffffffffffffffffffffffffff81111561105957611058610fa4565b5b92915050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b600061109c838561105f565b93506110a9838584611070565b6110b28361107f565b840190509392505050565b60006060820190506110d26000830187610e59565b6110df6020830186610e59565b81810360408301526110f2818486611090565b905095945050505050565b600061110882610e4f565b915061111383610e4f565b925082820190508082111561112b5761112a610fa4565b5b92915050565b60006080820190506111466000830187610bfe565b6111536020830186610c44565b6111606040830185610e59565b61116d6060830184610e59565b95945050505050565b600061118182610ef1565b91507f800000000000000000000000000000000000000000000000000000000000000082036111b3576111b2610fa4565b5b816000039050919050565b60006040820190506111d36000830185610bfe565b6111e06020830184610e59565b9392505050565b6111f081610f60565b81146111fb57600080fd5b50565b60008151905061120d816111e7565b92915050565b60006020828403121561122957611228610cc2565b5b6000611237848285016111fe565b91505092915050565b60006060820190506112556000830187610efb565b6112626020830186610efb565b8181036040830152611275818486611090565b905095945050505050565b600060a0820190506112956000830188610efb565b6112a26020830187610efb565b6112af6040830186610c6e565b6112bc6060830185610c44565b6112c96080830184610c8a565b9695505050505050565b60008160601b9050919050565b60006112eb826112d3565b9050919050565b60006112fd826112e0565b9050919050565b61131561131082610bec565b6112f2565b82525050565b60008160e81b9050919050565b60006113338261131b565b9050919050565b61134b61134682610c7d565b611328565b82525050565b600061135d8286611304565b60148201915061136d828561133a565b60038201915061137d828461133a565b600382019150819050949350505050565b61139781610e4f565b81146113a257600080fd5b50565b6000815190506113b48161138e565b92915050565b6000602082840312156113d0576113cf610cc2565b5b60006113de848285016113a5565b9150509291505056fea2646970667358221220f4e2590f2537681752ea321e68225170cf4b1cf45808482dcc27190db86ae8bc64736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1039,
        "contract": "contracts/UniswapV3Pool.sol:UniswapV3Pool",
        "label": "slot0",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(Slot0)1036_storage"
      },
      {
        "astId": 1041,
        "contract": "contracts/UniswapV3Pool.sol:UniswapV3Pool",
        "label": "liquidity",
        "offset": 0,
        "slot": "1",
        "type": "t_uint128"
      },
      {
        "astId": 1046,
        "contract": "contracts/UniswapV3Pool.sol:UniswapV3Pool",
        "label": "ticks",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_int24,t_struct(Info)1465_storage)"
      },
      {
        "astId": 1051,
        "contract": "contracts/UniswapV3Pool.sol:UniswapV3Pool",
        "label": "positions",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_bytes32,t_struct(Info)1400_storage)"
      }
    ],
    "types": {
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_int24": {
        "encoding": "inplace",
        "label": "int24",
        "numberOfBytes": "3"
      },
      "t_mapping(t_bytes32,t_struct(Info)1400_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct Position.Info)",
        "numberOfBytes": "32",
        "value": "t_struct(Info)1400_storage"
      },
      "t_mapping(t_int24,t_struct(Info)1465_storage)": {
        "encoding": "mapping",
        "key": "t_int24",
        "label": "mapping(int24 => struct Tick.Info)",
        "numberOfBytes": "32",
        "value": "t_struct(Info)1465_storage"
      },
      "t_struct(Info)1400_storage": {
        "encoding": "inplace",
        "label": "struct Position.Info",
        "members": [
          {
            "astId": 1399,
            "contract": "contracts/UniswapV3Pool.sol:UniswapV3Pool",
            "label": "liquidity",
            "offset": 0,
            "slot": "0",
            "type": "t_uint128"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Info)1465_storage": {
        "encoding": "inplace",
        "label": "struct Tick.Info",
        "members": [
          {
            "astId": 1462,
            "contract": "contracts/UniswapV3Pool.sol:UniswapV3Pool",
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 1464,
            "contract": "contracts/UniswapV3Pool.sol:UniswapV3Pool",
            "label": "liquidity",
            "offset": 1,
            "slot": "0",
            "type": "t_uint128"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Slot0)1036_storage": {
        "encoding": "inplace",
        "label": "struct UniswapV3Pool.Slot0",
        "members": [
          {
            "astId": 1033,
            "contract": "contracts/UniswapV3Pool.sol:UniswapV3Pool",
            "label": "sqrtPriceX96",
            "offset": 0,
            "slot": "0",
            "type": "t_uint160"
          },
          {
            "astId": 1035,
            "contract": "contracts/UniswapV3Pool.sol:UniswapV3Pool",
            "label": "tick",
            "offset": 20,
            "slot": "0",
            "type": "t_int24"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint160": {
        "encoding": "inplace",
        "label": "uint160",
        "numberOfBytes": "20"
      }
    }
  }
}